version: '3.8'

services:
  ollama:
    build:
      context: ./ollama
    image: agiapi.azurecr.io/ollama-llama32:${OLLAMA_DOCKER_TAG:-latest}
    container_name: ollama
    volumes:
      - ollama:/root/.ollama
    ports:
      - "11434:11434"
    tty: true
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 4G
    networks:
      - open-webui-network

  searxng:
    image: searxng/searxng:latest
    container_name: searxng
    ports:
      - "8080:8080"
    volumes:
      - ./searxng_settings.yml:/etc/searxng/settings.yml:ro
    restart: unless-stopped
    networks:
      - open-webui-network

  open-webui-dev:
    image: ghcr.io/open-webui/open-webui:${WEBUI_DOCKER_TAG:-main}
    container_name: open-webui-dev
    volumes:
      - type: bind
        source: /sharefs/services/open-webui-dev # <- pick any path you like
        target: /app/backend/data
    environment:
      - OPENAI_API_BASE_URL=http://api.agidev.us/v1
      - OPENAI_API_KEY=[REDACTED]
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY:-}
      - WEBUI_NAME=${WEBUI_NAME:-Open WebUI Dev}
      - DEFAULT_LOCALE=${DEFAULT_LOCALE:-en-US}
      - DEFAULT_MODELS=arx-1
      - ENABLE_OLLAMA_API=false # disable Ollama endpoint
    networks:
      - open-webui-network
      - proxy # ← external Traefik network
    restart: unless-stopped

    # ── Traefik wiring ──────────────────────────────────────────
    labels:
      - "traefik.enable=true"

      # HTTPS router
      - "traefik.http.routers.open-webui-dev.rule=Host(`open-webui-dev.agidev.us`)"
      - "traefik.http.routers.open-webui-dev.entrypoints=websecure"
      - "traefik.http.routers.open-webui-dev.tls=true"
      - "traefik.http.routers.open-webui-dev.tls.certresolver=letsencrypt"

      # HTTP router
      - "traefik.http.routers.open-webui-dev-http.rule=Host(`open-webui-dev.agidev.us`)"
      - "traefik.http.routers.open-webui-dev-http.entrypoints=web"
      - "traefik.http.routers.open-webui-dev-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

      # Middleware
      - "traefik.http.services.open-webui-dev.loadbalancer.server.port=8080"
      - "traefik.http.services.open-webui-dev.loadbalancer.passHostHeader=true"

  pipelines:
    image: ghcr.io/open-webui/pipelines:main
    container_name: pipelines
    ports:
      - "9099:9099"
    volumes:
      - pipelines:/app/pipelines
    environment:
      - PIPELINES_API_KEY=0p3n-w3bu!
      - PIPELINES_URLS=https://github.com/open-webui/pipelines/blob/main/examples/filters/function_calling_filter_pipeline.py
    restart: unless-stopped
    networks:
      - open-webui-network

volumes:
  open-webui:
  ollama:
  pipelines:

networks:
  # Internal network for the app services
  open-webui-network:
    driver: bridge
  # For Traefik
  proxy:
    external: true
